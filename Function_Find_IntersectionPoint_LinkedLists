/* Link list Node 
struct Node {
    int data;
    struct Node* next;
}; */


/* Should return data of intersection point of two linked
   lists head1 and head2.
   If there is no intersecting point, then return -1. */
int intersectPoint(Node* head1, Node* head2)
{
    if(head1 == NULL && head2 == NULL)
        return -1;
    if(head1!=NULL && head2==NULL)
        return -1;
    if(head2!=NULL && head1==NULL)
        return -1;
    int count1= 0;
    int count2 = 0;
    
    Node* temp1 = head1;
    Node* temp2 = head2;
    while(temp1!=NULL && temp2!=NULL )
    {
        temp1 = temp1->next;
        count1++;
        temp2  = temp2->next;
        count2++;
        
    }
    if(temp1==NULL)
    {
        while(temp2)
        {
            count2++;
            temp2 = temp2->next;
        }
    }
    if(temp2==NULL)
    {
        while(temp1)
        {
            count1++;
            temp1 = temp1->next;
        }
    }
    int diff = abs(count2 - count1);
    if(count2 > count1)
    {
        temp2 = head2;
        while(diff)
        {
            temp2 = temp2->next;
            diff--;
        }
        temp1 = head1;
        while(temp1 && temp2)
        {
            if(temp1 == temp2)
            {
                return temp1->data;
            }
            temp1 = temp1->next;
            temp2 = temp2->next;
        }
        return -1;
    }
    else
    {
       temp1 = head1;
        while(diff)
        {
            temp1 = temp1->next;
            diff--;
        } 
        temp2 = head2;
        while(temp1 && temp2)
        {
            if(temp1 == temp2)
            {
                return temp2->data;
            }
            temp1 = temp1->next;
            temp2 = temp2->next;
        }
        return -1;
    }
    
}
