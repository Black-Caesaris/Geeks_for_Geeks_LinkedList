/* The structure of the Linked list Node is as follows:
struct Node {
    int val;
    struct Node* next;
}; */

void intersection(Node **head1, Node **head2,Node **head3)
{
    if(*head1==NULL && *head2==NULL)
        return ;
    if(*head1==NULL)
        *head3 = *head2;
        return;
    if(*head2 == NULL)
        *head3 = *head1;
        return;
    Node* curr1 = *head1;
    Node* curr2 = *head2;
    Node* temp = *head3;
    cout<<curr1->val<< " "<<curr2->val;
    while(curr1 && curr2){
        cout<<curr1->val<< " "<<curr2->val;
    if(curr1->val<curr2->val)
    {   
        while(curr1->val!=curr2->val && curr1 && curr2)
        {
            curr1 = curr1->next;
            
        }
        if(curr1)
        {   
            
            temp->next = curr1;
            temp = temp->next;
            curr2 = curr2->next;
        }
    }
    else if(curr1->val>curr2->val)
    {
        while(curr1->val!=curr2->val && curr2 && curr1)
        {
            curr2 = curr2->next;
            
        }
        if(curr2)
        {
            temp->next = curr1;
            temp = temp->next;
            curr1 = curr1->next;
        }
    }
    else if (curr1->val == curr2->val)
    {
        temp->next = curr1;
        temp = temp->next;
        curr1 = curr1->next;
        curr2= curr2->next;
    }
    }
        
}
